// <auto-generated />
using System;
using BlogCore3.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlogCore3.Migrations
{
    [DbContext(typeof(BlogDbContext))]
    [Migration("20191024212142_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlogCore3.Models.BlogPosts", b =>
                {
                    b.Property<int>("BlogPostsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subtitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogPostsId");

                    b.ToTable("BlogPosts");

                    b.HasData(
                        new
                        {
                            BlogPostsId = 1,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://sample.com",
                            Subtitle = "sub1",
                            Title = "Title1"
                        },
                        new
                        {
                            BlogPostsId = 2,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://sample.com",
                            Subtitle = "sub1q",
                            Title = "Title1q"
                        },
                        new
                        {
                            BlogPostsId = 3,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://sample.com",
                            Subtitle = "sub2",
                            Title = "Title2"
                        },
                        new
                        {
                            BlogPostsId = 4,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://sample.com",
                            Subtitle = "sub3",
                            Title = "Title3"
                        });
                });

            modelBuilder.Entity("BlogCore3.Models.TodoItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TodoItems");
                });

            modelBuilder.Entity("BlogCore3.Models.BlogPosts", b =>
                {
                    b.OwnsOne("BlogCore3.Models.Name", "Author", b1 =>
                        {
                            b1.Property<int>("BlogPostsId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("First")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Last")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BlogPostsId");

                            b1.ToTable("BlogPosts");

                            b1.WithOwner()
                                .HasForeignKey("BlogPostsId");

                            b1.HasData(
                                new
                                {
                                    BlogPostsId = 1,
                                    First = "Doaa",
                                    Last = "Hashim"
                                },
                                new
                                {
                                    BlogPostsId = 2,
                                    First = "Deena",
                                    Last = "Hashim"
                                },
                                new
                                {
                                    BlogPostsId = 3,
                                    First = "Emy",
                                    Last = "Hashim"
                                },
                                new
                                {
                                    BlogPostsId = 4,
                                    First = "Noor",
                                    Last = "Hashim"
                                });
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
